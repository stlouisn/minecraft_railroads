plugins {
    id "dev.architectury.loom" version "${architectury_loom_version}"
    id "maven-publish"
    id 'eclipse'
    id 'idea'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name + '-' + project.minecraft_version
}

java {
    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17
}

loom {

    silentMojangMappingsLicense()

    forge {

//        mixinConfigs = [
//            mod_id + ".mixins.json"
//        ]
//
//        mixin.defaultRefmapName.set(mod_id + ".refmap.json")

    }
}

repositories {

    flatDir {
        dirs "mods"
    }

    maven {
        name = 'Curse Maven'
        url = "https://www.cursemaven.com"
        allowInsecureProtocol = true
        content {
            includeGroup "curse.maven"
        }
    }

}

dependencies {

    minecraft "com.mojang:minecraft:${project.minecraft_version}"

    mappings loom.officialMojangMappings()

    forge "net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}"

//    annotationProcessor("net.fabricmc:sponge-mixin:${project.mixin_version}")

//    compileOnly(annotationProcessor("io.github.llamalad7:mixinextras-common:${project.mixin_extras_version}"))
//    implementation(include("io.github.llamalad7:mixinextras-forge:${project.mixin_extras_version}"))

//    modImplementation("curse.maven:${project.moonlight_project_id}:${project.moonlight_forge_version}")

//    modImplementation("curse.maven:${project.jei_project_id}:${project.jei_forge_version}")

    implementation("org.jetbrains:annotations:${project.jetbrains_version}")

}

processResources {

    var replaceProperties = [

            minecraft_version    : minecraft_version,
            minecraft_min_version: minecraft_min_version,
            minecraft_max_version: minecraft_max_version,
            pack_format_number   : pack_format_number,

            mod_license          : mod_license,

            mod_id               : mod_id,
            mod_version          : mod_version,
            mod_name             : mod_name,
            mod_authors          : mod_authors,
            mod_credits          : mod_credits,
            mod_description      : mod_description,
            mod_homepage         : mod_homepage,
            mod_github           : mod_github,

            loader_version_range : loader_version_range,
            forge_version        : forge_version,
            forge_version_range  : forge_version_range

    ]

    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }

}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
    options.release = 17
}

java {
    withSourcesJar()
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : project.mod_id,
                "Specification-Version"   : "1",
                "Specification-Vendor"    : project.mod_authors,
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : version,
                "Implementation-Vendor"   : project.mod_authors,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}